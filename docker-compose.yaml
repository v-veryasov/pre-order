version: '3'

services:
  discovery:
    container_name: discovery
    build: ./eureka/
    image: discovery:latest
    ports:
      - "8085:8085"
  api-gateway:
    container_name: api-gateway
    build: ./api-gateway/
    image: api-gateway:latest
    ports:
      - "8100:8100"
    depends_on:
      - discovery
    environment:
      - EUREKA_DEFAULT_ZONE=discovery
  db:
    container_name: db
    build:
      context: ./db
      dockerfile: Dockerfile
    ports:
      - "5431:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pg
  auth-sso:
    container_name: auth-sso
    build: ./auth-sso/
    image: auth-sso:latest
    ports:
      - "8090:8090"
    depends_on:
      - discovery
      - db
    environment:
      - DATASOURCE_HOST=db
      - EUREKA_DEFAULT_ZONE=discovery

#  profile:
#    container_name: profile
#    build: ./profile/
#    image: profile:latest
#    ports:
#      - "8091:8091"
#    depends_on:
#      - discovery
#  app:
#    container_name: app
#    image: 'pre-order:latest'
#    ports:
#    - 8080:8095
#    build:
#      context: .
#    depends_on:
#      - db
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/pre-order
#      - SPRING_DATASOURCE_USERNAME=admin
#      - SPRING_DATASOURCE_PASSWORD=admin
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
# TODO: нужно поправить!
#  zookeeper:
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
#  kafka:
#    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'