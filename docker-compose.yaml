version: '3'

services:
  discovery:
    container_name: discovery
    build: ./eureka/
    image: discovery:latest
    ports:
      - "8085:8085"
  api-gateway:
    container_name: api-gateway
    build: ./api-gateway/
    image: api-gateway:latest
    ports:
      - "8100:8100"
    depends_on:
      - discovery
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery:8085/eureka/

  auth-sso:
    container_name: auth-sso
    build: ./auth-sso/
    image: auth-sso:latest
    ports:
      - "8090:8090"
    depends_on:
      - discovery
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-dev:5432/pre-order-auth
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery:8085/eureka/
  profile:
    container_name: profile
    build: ./profile/
    image: profile:latest
    ports:
      - "8091:8091"
    depends_on:
      - discovery
      - db
      - zookeeper
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-dev:5432/pre-order-profile
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery:8085/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERV=kafka:9092
  booking:
    container_name: booking
    build: ./booking/
    image: booking:latest
    ports:
      - "8092:8092"
    depends_on:
      - discovery
      - db
      - zookeeper
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-dev:5432/pre-order-booking
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery:8085/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERV=kafka:9092
  db:
    container_name: db
    image: db:latest
    hostname: db-dev
    build:
      context: ./db
      dockerfile: Dockerfile
    ports:
      - "5431:5432/tcp"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pg
    volumes:
      - db_data_dev:/var/lib/postgresql/data

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    depends_on:
      - zookeeper
volumes:
  db_data_dev:
    driver: local