server:
  port: ${SERVER_PORT:8090}
  max-http-header-size: 16KB

spring:
  application:
    name: api-gateway-auth
  main:
    banner-mode: off
  jackson:
    serialization:
      write-dates-as-timestamps: true
      write-date-timestamps-as-nanoseconds: false
    default-property-inclusion: non_null
  datasource:
#    url: jdbc:postgresql://${DATASOURCE_HOST:localhost}:5431/pre-order-auth
    url: jdbc:postgresql://db:5431/pre-order-auth
    driver-class-name: org.postgresql.Driver
    username: auth
    password: auth
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc.lob.non_contextual_creation: true #HHH-12368
#        temp:
#          use_jdbc_metadata_defaults: true
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/master.xml

eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_DEFAULT_ZONE:localhost}:8085/eureka/

# SSO
security:
  enabled: ${SECURITY_ENABLED:true}
  oauth2:
    client:
      clientId: ${SECURITY_OAUTH2_CLIENT_ID:auth-id-service}
      clientSecret: ${SECURITY_OAUTH2_CLIENT_SECRET:secret}
      scope: trusted
      accessTokenUri:  http://localhost:8090/oauth/token
      userAuthorizationUri:  http://localhost:8090/oauth/token
    resource:
      jwt:
        keyValue: ${SECURITY_OAUTH2_JWT_KEY:jwt-secret}

logging:
  level:
    .: DEBUG
    feign: DEBUG
    ru.edu: DEBUG
    org.springframework:
      web.filter.CommonsRequestLoggingFilter: DEBUG
      security: DEBUG

jwt:
  token:
    secret: jwtAppDemo
    expired: 360000